// Generated by CoffeeScript 1.8.0
(function() {
  var EventEmitter, GITHUB_AUTH_HASH, GITHUB_TOKEN_SET, Github, db, https, querystring, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventEmitter = require('events').EventEmitter;

  https = require('https');

  querystring = require("querystring");

  db = require("./db").db;

  _ref = require("./constants"), GITHUB_TOKEN_SET = _ref.GITHUB_TOKEN_SET, GITHUB_AUTH_HASH = _ref.GITHUB_AUTH_HASH;

  Github = (function(_super) {
    __extends(Github, _super);

    function Github() {
      this.requestToken = __bind(this.requestToken, this);
      this.on('requestToken', this.requestToken);
      this.on('receiveAccessToken', this.receiveAccessToken);
    }

    Github.prototype.requestToken = function(req, res, cb) {
      var ghpost, options, post_data;
      post_data = querystring.stringify({
        code: req.query.code,
        client_id: process.env.GITHUB_CLIENT_ID,
        client_secret: process.env.GITHUB_CLIENT_SECRET
      });
      console.log(post_data);
      options = {
        method: 'POST',
        host: 'github.com',
        path: '/login/oauth/access_token',
        headers: {
          "User-Agent": "skyl/hello-express",
          "Accept": "application/json"
        }
      };
      ghpost = https.request(options, cb);
      ghpost.write(post_data);
      return ghpost.end();
    };

    Github.prototype.receiveAccessToken = function(access_token, cb) {
      var options, user_req;
      console.log("SAVING FROM GITHUB!");
      db.sadd(GITHUB_TOKEN_SET, access_token);
      options = {
        host: 'api.github.com',
        path: "/user?access_token=" + access_token,
        headers: {
          "User-Agent": "skyl/hello-express"
        }
      };
      user_req = https.request(options, function(gh_response) {
        var str;
        str = '';
        gh_response.on('data', function(chunk) {
          return str += chunk;
        });
        return gh_response.on('end', function() {
          console.log(str);
          db.hset(GITHUB_AUTH_HASH, access_token, str);
          return cb(str);
        });
      });
      return user_req.end();
    };

    return Github;

  })(EventEmitter);

  global.gh = new Github;

}).call(this);
